import discord
from discord.ext import commands
import subprocess
import os

# Create a dictionary to store the mapping between URLs and downloaded video files
video_mapping = {}

async def tikdl(message, bot):
    if 'tiktok.com' in message.content:
        tiktok_link = message.content

        # Change the working directory to where you want to download the videos
        os.chdir('/home/ec2-user/leena/tiktook')

        # Construct the command to download the video
        command = f'python3 app.py -d --url "{tiktok_link}"'
        try:
            subprocess.run(command, shell=True, check=True)
        except subprocess.CalledProcessError as e:
            print(f'Error running command: {e}')
        
        # List the files in the 'video' directory
        video_files = os.listdir('video')
        
        # Check if any video files were downloaded
        if video_files:
            # Get the first video file (you can adjust this logic if needed)
            video_file = video_files[0]

            # Store the mapping between the URL and the downloaded video file
            video_mapping[message.content] = video_file

            # Create a Discord file object from the video file
            file = discord.File(f'video/{video_file}')

            # Send the file in the same channel as the original message
            await message.channel.send(file=file)

            # Delete the video file
            os.remove(f'video/{video_file}')
        else:
            await message.channel.send("No video was downloaded.")

    await bot.process_commands(message)
import discord
from discord.ext import commands
import subprocess
import os

# Create a dictionary to store the mapping between URLs and downloaded video files
video_mapping = {}

async def tikdl(message, bot):
    if 'tiktok.com' in message.content:
        tiktok_link = message.content

        # Change the working directory to where you want to download the videos
        os.chdir('/home/ec2-user/leena/tiktook')

        # Construct the command to download the video
        command = f'python3 app.py -d --url "{tiktok_link}"'
        try:
            subprocess.run(command, shell=True, check=True)
        except subprocess.CalledProcessError as e:
            print(f'Error running command: {e}')
        
        # List the files in the 'video' directory
        video_files = os.listdir('video')
        
        # Check if any video files were downloaded
        if video_files:
            # Get the first video file (you can adjust this logic if needed)
            video_file = video_files[0]

            # Store the mapping between the URL and the downloaded video file
            video_mapping[message.content] = video_file

            # Create a Discord file object from the video file
            file = discord.File(f'video/{video_file}')

            # Send the file in the same channel as the original message
            await message.reply(file=file)

            # Delete the video file
            os.remove(f'video/{video_file}')
        else:
            await message.reply("فيه مشكلة :(")

    await bot.process_commands(message)
